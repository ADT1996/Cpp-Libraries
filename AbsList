#ifndef ADT_ABSLISTH
#define ADT_ABSLISTH
#include<Object>

template<class T> class Abs_List : public Object {
	protected:
		unsigned int size;
	public:
		Abs_List() {
			size = 0;
		}

		void add(T*);
		void addRange(Abs_List<T>*);
		void insert(T*,unsigned int);
		void insert(Abs_List<T>*,unsigned int);
		void remove(T*);
		void removeRange(Abs_List<T>*);
		void removeAt(unsigned int);
		void Sort();
		void swap(unsigned int,unsigned int);
		void swap(T*,T*);

		T* get(unsigned int);
		Abs_List<T>* sub(unsigned int,unsigned int);
		Abs_List<T>* sub(unsigned int);
		unsigned int indexOf(T*);
		unsigned int getSize();
		unsigned int count(T*);
		bool contain(T*);

		virtual string toString();
		
		static string getClassName();
};
#endif
